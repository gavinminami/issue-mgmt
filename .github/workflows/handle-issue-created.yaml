name: Add runbook in comment
on:
  issues:
    types:
      - labeled
jobs:
  add_runbook:
    if: github.event.label.name == 'bug'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - run: |
          npm install
      - run: |
          pwd
          ls -al
      - uses: actions/github-script@v6
        with:
          script: |
            console.log(JSON.stringify(context, null, 2));
            // console.log(context.issue);
            // const _issue = await github.rest.issues.get({
            //   issue_number: context.issue.number,
            //   owner: context.repo.owner,
            //   repo: context.repo.repo,
            // });
            // console.log(JSON.stringify({issue: _issue}, null, 2));
            // console.log(JSON.stringify({labels:_issue.data.labels}));
            // console.log(_issue.data.body);

            const { parseData, parseIssueTemplate, buildFieldLabelToIdMap } = require(`./dist/index.js`);

            const _issue = context.payload.issue;

            // parse the issue data
            console.log({body: _issue.body});
            const parsedData = parseData(_issue.body);
            console.log(JSON.stringify({"parsedData": parsedData}, null, 2));

            // parse the issue template
            const issueTemplate = parseIssueTemplate("bug-report.yaml");
            console.log(JSON.stringify({"issueTemplate": issueTemplate}, null, 2));
            const issueFields = buildFieldLabelToIdMap(issueTemplate, parsedData);
            console.log(JSON.stringify({"issueFields": issueFields}, null, 2));

            // based on data for color field get content for comment
            const colorValue = issueFields["color"].value;
            const commentValue = readFileAsString(`runbooks/${colorValue}.yaml`);

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentValue,
            });
